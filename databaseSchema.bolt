/**
 * This Bolt file gets compiled into the database.rules.json file for the Firebase Realtime
 * Database. There are libraries that claim to be able to generate typescript definitions that
 * correspond to this schema, but neither of the two that I tried were good enough, so the
 * TypeScript definitions are maintained by hand in functions/apiContract/database/DataModel.ts.
 */

path / {
  write() { false }
}

path /publicGameConfig/{gameId} is PublicGameConfig {
  read() { true }
}

path /gameMachineStateJson/{gameId} is String {
  read() { true }
}

// Game events are (for now) private to the server
path /gameEventsJson/{gameId} is GameEvents {
  read() { false }
}

// Player identities are private to the server
path /playerIdentities/{gameId} is Map<Position, String> {
  read() { false }
}

// Player-private game state can be read only by that player.
// Since a player knows only their own ID, this is "security by obscurity".
path /playerPrivateGameState/{gameId}/{playerId} is PlayerPrivateGameState {
  read() { true }
}

type PublicGameConfig {
  gameExists: Boolean,
  playerFriendlyNames: Map<Position, String>,
}

type GameEvents extends String[] {}

type PlayerPrivateGameState {}

type Position extends String {
  validate() {
    this === 'north' ||
    this === 'south' ||
    this === 'east' ||
    this === 'west'
  }
}
